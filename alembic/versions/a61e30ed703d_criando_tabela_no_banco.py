"""Criando tabela no banco

Revision ID: a61e30ed703d
Revises: 
Create Date: 2025-06-27 21:48:35.173619

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a61e30ed703d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categorias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=50), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('data_cadastro', sa.DateTime(), nullable=False),
    sa.Column('data_atualizacao', sa.DateTime(), nullable=False),
    sa.Column('ativo', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_categoria_ativo', 'categorias', ['ativo'], unique=False)
    op.create_index(op.f('ix_categorias_id'), 'categorias', ['id'], unique=False)
    op.create_index(op.f('ix_categorias_nome'), 'categorias', ['nome'], unique=True)
    op.create_table('empresa',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cnpj', sa.String(length=14), nullable=False),
    sa.Column('razao_social', sa.String(length=128), nullable=False),
    sa.Column('nome_fantasia', sa.String(length=64), nullable=True),
    sa.Column('numero_contato', sa.String(length=9), nullable=True),
    sa.Column('email_contato', sa.String(length=64), nullable=True),
    sa.Column('website', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usuarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome_completo', sa.String(length=100), nullable=False),
    sa.Column('cpf', sa.String(length=14), nullable=False),
    sa.Column('telefone', sa.String(length=15), nullable=False),
    sa.Column('endereco', sa.String(length=200), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('tipo', sa.Enum('CLIENTE', 'FUNCIONARIO', 'ADMINISTRADOR', name='tipousuario'), nullable=False),
    sa.Column('matricula', sa.String(length=20), nullable=True),
    sa.Column('data_cadastro', sa.DateTime(), nullable=False),
    sa.Column('data_atualizacao', sa.DateTime(), nullable=False),
    sa.Column('ativo', sa.Boolean(), nullable=False),
    sa.Column('limite_emprestimos', sa.Integer(), nullable=False),
    sa.CheckConstraint("(tipo = 'funcionario' AND matricula IS NOT NULL) OR (tipo != 'funcionario' AND matricula IS NULL)", name='check_matricula_funcionario'),
    sa.CheckConstraint('limite_emprestimos > 0', name='check_limite_emprestimos'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_usuario_ativo', 'usuarios', ['ativo', 'tipo'], unique=False)
    op.create_index(op.f('ix_usuarios_cpf'), 'usuarios', ['cpf'], unique=True)
    op.create_index(op.f('ix_usuarios_email'), 'usuarios', ['email'], unique=True)
    op.create_index(op.f('ix_usuarios_id'), 'usuarios', ['id'], unique=False)
    op.create_index(op.f('ix_usuarios_matricula'), 'usuarios', ['matricula'], unique=True)
    op.create_index(op.f('ix_usuarios_tipo'), 'usuarios', ['tipo'], unique=False)
    op.create_table('livros',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titulo', sa.String(length=200), nullable=False),
    sa.Column('autor', sa.String(length=100), nullable=False),
    sa.Column('isbn', sa.String(length=13), nullable=False),
    sa.Column('editora', sa.String(length=100), nullable=False),
    sa.Column('ano_publicacao', sa.Integer(), nullable=False),
    sa.Column('edicao', sa.String(length=20), nullable=True),
    sa.Column('quantidade_total', sa.Integer(), nullable=False),
    sa.Column('quantidade_disponivel', sa.Integer(), nullable=False),
    sa.Column('categoria_id', sa.Integer(), nullable=False),
    sa.Column('localizacao', sa.String(length=50), nullable=False),
    sa.Column('data_cadastro', sa.DateTime(), nullable=False),
    sa.Column('data_atualizacao', sa.DateTime(), nullable=False),
    sa.Column('sinopse', sa.Text(), nullable=True),
    sa.Column('capa_url', sa.String(length=255), nullable=True),
    sa.CheckConstraint('ano_publicacao > 0', name='check_ano_publicacao'),
    sa.CheckConstraint('quantidade_disponivel >= 0', name='check_quantidade_disponivel'),
    sa.CheckConstraint('quantidade_total >= quantidade_disponivel', name='check_quantidade_total'),
    sa.ForeignKeyConstraint(['categoria_id'], ['categorias.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_livro_disponivel', 'livros', ['quantidade_disponivel', 'categoria_id'], unique=False)
    op.create_index(op.f('ix_livros_autor'), 'livros', ['autor'], unique=False)
    op.create_index(op.f('ix_livros_categoria_id'), 'livros', ['categoria_id'], unique=False)
    op.create_index(op.f('ix_livros_id'), 'livros', ['id'], unique=False)
    op.create_index(op.f('ix_livros_isbn'), 'livros', ['isbn'], unique=True)
    op.create_index(op.f('ix_livros_titulo'), 'livros', ['titulo'], unique=False)
    op.create_table('emprestimos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('livro_id', sa.Integer(), nullable=False),
    sa.Column('funcionario_id', sa.Integer(), nullable=False),
    sa.Column('data_emprestimo', sa.DateTime(), nullable=False),
    sa.Column('data_devolucao_prevista', sa.DateTime(), nullable=False),
    sa.Column('data_devolucao_real', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('ATIVO', 'DEVOLVIDO', 'ATRASADO', 'PERDIDO', name='statusemprestimo'), nullable=False),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('dias_emprestimo', sa.Integer(), nullable=False),
    sa.CheckConstraint('data_devolucao_prevista > data_emprestimo', name='check_data_devolucao'),
    sa.CheckConstraint('dias_emprestimo > 0', name='check_dias_emprestimo'),
    sa.ForeignKeyConstraint(['funcionario_id'], ['usuarios.id'], ),
    sa.ForeignKeyConstraint(['livro_id'], ['livros.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_emprestimo_status', 'emprestimos', ['status', 'data_devolucao_prevista'], unique=False)
    op.create_index(op.f('ix_emprestimos_funcionario_id'), 'emprestimos', ['funcionario_id'], unique=False)
    op.create_index(op.f('ix_emprestimos_id'), 'emprestimos', ['id'], unique=False)
    op.create_index(op.f('ix_emprestimos_livro_id'), 'emprestimos', ['livro_id'], unique=False)
    op.create_index(op.f('ix_emprestimos_status'), 'emprestimos', ['status'], unique=False)
    op.create_index(op.f('ix_emprestimos_usuario_id'), 'emprestimos', ['usuario_id'], unique=False)
    op.create_table('reservas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('livro_id', sa.Integer(), nullable=False),
    sa.Column('data_reserva', sa.DateTime(), nullable=False),
    sa.Column('data_limite', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('PENDENTE', 'CONCLUIDA', 'CANCELADA', 'EXPIRADA', name='statusreserva'), nullable=False),
    sa.Column('prioridade', sa.Integer(), nullable=False),
    sa.CheckConstraint('data_limite > data_reserva', name='check_data_limite'),
    sa.CheckConstraint('prioridade > 0', name='check_prioridade'),
    sa.ForeignKeyConstraint(['livro_id'], ['livros.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_reserva_status', 'reservas', ['status', 'data_limite'], unique=False)
    op.create_index(op.f('ix_reservas_id'), 'reservas', ['id'], unique=False)
    op.create_index(op.f('ix_reservas_livro_id'), 'reservas', ['livro_id'], unique=False)
    op.create_index(op.f('ix_reservas_status'), 'reservas', ['status'], unique=False)
    op.create_index(op.f('ix_reservas_usuario_id'), 'reservas', ['usuario_id'], unique=False)
    op.create_table('multas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('emprestimo_id', sa.Integer(), nullable=False),
    sa.Column('valor', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('data_geracao', sa.DateTime(), nullable=False),
    sa.Column('data_pagamento', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PENDENTE', 'PAGO', 'CANCELADA', name='statusmulta'), nullable=False),
    sa.Column('motivo', sa.Text(), nullable=False),
    sa.Column('dias_atraso', sa.Integer(), nullable=False),
    sa.Column('valor_por_dia', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.CheckConstraint('dias_atraso >= 0', name='check_dias_atraso'),
    sa.CheckConstraint('valor >= 0', name='check_valor_multa'),
    sa.CheckConstraint('valor_por_dia >= 0', name='check_valor_por_dia'),
    sa.ForeignKeyConstraint(['emprestimo_id'], ['emprestimos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_multa_status', 'multas', ['status', 'data_geracao'], unique=False)
    op.create_index(op.f('ix_multas_emprestimo_id'), 'multas', ['emprestimo_id'], unique=False)
    op.create_index(op.f('ix_multas_id'), 'multas', ['id'], unique=False)
    op.create_index(op.f('ix_multas_status'), 'multas', ['status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_multas_status'), table_name='multas')
    op.drop_index(op.f('ix_multas_id'), table_name='multas')
    op.drop_index(op.f('ix_multas_emprestimo_id'), table_name='multas')
    op.drop_index('idx_multa_status', table_name='multas')
    op.drop_table('multas')
    op.drop_index(op.f('ix_reservas_usuario_id'), table_name='reservas')
    op.drop_index(op.f('ix_reservas_status'), table_name='reservas')
    op.drop_index(op.f('ix_reservas_livro_id'), table_name='reservas')
    op.drop_index(op.f('ix_reservas_id'), table_name='reservas')
    op.drop_index('idx_reserva_status', table_name='reservas')
    op.drop_table('reservas')
    op.drop_index(op.f('ix_emprestimos_usuario_id'), table_name='emprestimos')
    op.drop_index(op.f('ix_emprestimos_status'), table_name='emprestimos')
    op.drop_index(op.f('ix_emprestimos_livro_id'), table_name='emprestimos')
    op.drop_index(op.f('ix_emprestimos_id'), table_name='emprestimos')
    op.drop_index(op.f('ix_emprestimos_funcionario_id'), table_name='emprestimos')
    op.drop_index('idx_emprestimo_status', table_name='emprestimos')
    op.drop_table('emprestimos')
    op.drop_index(op.f('ix_livros_titulo'), table_name='livros')
    op.drop_index(op.f('ix_livros_isbn'), table_name='livros')
    op.drop_index(op.f('ix_livros_id'), table_name='livros')
    op.drop_index(op.f('ix_livros_categoria_id'), table_name='livros')
    op.drop_index(op.f('ix_livros_autor'), table_name='livros')
    op.drop_index('idx_livro_disponivel', table_name='livros')
    op.drop_table('livros')
    op.drop_index(op.f('ix_usuarios_tipo'), table_name='usuarios')
    op.drop_index(op.f('ix_usuarios_matricula'), table_name='usuarios')
    op.drop_index(op.f('ix_usuarios_id'), table_name='usuarios')
    op.drop_index(op.f('ix_usuarios_email'), table_name='usuarios')
    op.drop_index(op.f('ix_usuarios_cpf'), table_name='usuarios')
    op.drop_index('idx_usuario_ativo', table_name='usuarios')
    op.drop_table('usuarios')
    op.drop_table('empresa')
    op.drop_index(op.f('ix_categorias_nome'), table_name='categorias')
    op.drop_index(op.f('ix_categorias_id'), table_name='categorias')
    op.drop_index('idx_categoria_ativo', table_name='categorias')
    op.drop_table('categorias')
    # ### end Alembic commands ###
